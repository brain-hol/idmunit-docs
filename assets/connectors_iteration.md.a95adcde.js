import{_ as t,c as e,o as a,a as n}from"./app.f33a4d5b.js";const g=JSON.parse('{"title":"Iteration Connector","description":"","frontmatter":{},"headers":[{"level":2,"title":"Operations","slug":"operations","link":"#operations","children":[{"level":3,"title":"Examples","slug":"examples","link":"#examples","children":[]}]},{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]}],"relativePath":"connectors/iteration.md"}'),o={name:"connectors/iteration.md"},r=n(`<h1 id="iteration-connector" tabindex="-1">Iteration Connector <a class="header-anchor" href="#iteration-connector" aria-hidden="true">#</a></h1><p>The Iteration connector allows you to enhance existing connectors the following abilities:</p><ul><li>Repeat row operations over a specified range, and replace a token with the current iteration value.</li><li>Populate a large multi-value attribute over a specified range and replace a token with the current iteration value.</li></ul><p>These features are particularly useful when you need to:</p><ul><li>Create a large number of users for use in tests.</li><li>Create a group with a large number of group members (like the users created in previous bullet item).</li></ul><p>The row and attribute iterations can be used simultaneously to build multiple objects containing multi-valued attributes.</p><h2 id="operations" tabindex="-1">Operations <a class="header-anchor" href="#operations" aria-hidden="true">#</a></h2><p>Operations will be the same as the connector you are wrapping. The following additional attributes will also be available for use in an operation:</p><table><thead><tr><th>Attribute</th><th>Description</th></tr></thead><tbody><tr><td>rowIterationStart</td><td>Iteration start value (inclusive).</td></tr><tr><td>rowIterationEnd</td><td>Iteration end value (inclusive).</td></tr><tr><td>attributeIterationStart</td><td>Attribute iteration start value (inclusive).</td></tr><tr><td>attributeIterationEnd</td><td>Attribute iteration end value (inclusive).</td></tr></tbody></table><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-hidden="true">#</a></h3><h4 id="row-iteration" tabindex="-1">Row Iteration <a class="header-anchor" href="#row-iteration" aria-hidden="true">#</a></h4><p>The row iteration token is &quot;$rowIteration$&quot;. This token will be replaced with the current row iteration.</p><table><thead><tr><th>someValue</th><th>rowIterationStart</th><th>rowIterationEnd</th></tr></thead><tbody><tr><td>myValue$rowIteration$</td><td>3</td><td>5</td></tr></tbody></table><p>The above example will result in the operation being repeated with the values 3-5. The resulting values for someValue in the 3 iterations will be:</p><ul><li>myValue3</li><li>myValue4</li><li>myValue5</li></ul><h4 id="attribute-iteration" tabindex="-1">Attribute Iteration <a class="header-anchor" href="#attribute-iteration" aria-hidden="true">#</a></h4><p>The attribute iteration token is &quot;$attributeIteration$&quot;. This token will be replaced with the current attribute iteration.</p><table><thead><tr><th>someValue</th><th>attributeIterationStart</th><th>attributeIterationEnd</th></tr></thead><tbody><tr><td>myValue$attributeIteration$</td><td>4</td><td>7</td></tr></tbody></table><p>The above example will result in the attribute being repeated with the values 4-7. The resulting multiple values for someValue will be:</p><ul><li>myValue4, myValue5, myValue6, myValue7</li></ul><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-hidden="true">#</a></h2><p>To configure this connector you need to specify the same configuration you would for the connector you are enhancing with the following exceptions:</p><ul><li>The &lt;type&gt; configuration must point to the Iteration connector (<code>com.trivir.idmunit.connector.IterationConnector</code>).</li><li>An additional configuration of &lt;wrappedConnector&gt; will point to the connector type you would normally place in the &lt;type&gt; configuration. e.g. for the LDAP connector, this would be <code>com.trivir.idmunit.connector.LdapConnector</code>.</li></ul><p>For example, an enchanced LDAP connector would have the following configuration:</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki"><code><span class="line"><span style="color:#81A1C1;">&lt;connection&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;name&gt;</span><span style="color:#D8DEE9FF;">IDV</span><span style="color:#81A1C1;">&lt;/name&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;description&gt;</span><span style="color:#D8DEE9FF;">Connector to an LDAP server</span><span style="color:#81A1C1;">&lt;/description&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;type&gt;</span><span style="color:#D8DEE9FF;">com.trivir.idmunit.connector.IterationConnector</span><span style="color:#81A1C1;">&lt;/type&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;wrappedConnector&gt;</span><span style="color:#D8DEE9FF;">org.idmunit.connector.LdapConnector</span><span style="color:#81A1C1;">&lt;/wrappedConnector&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;server&gt;</span><span style="color:#D8DEE9FF;">192.168.1.3</span><span style="color:#81A1C1;">&lt;/server&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;user&gt;</span><span style="color:#D8DEE9FF;">cn=admin,o=services</span><span style="color:#81A1C1;">&lt;/user&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;password&gt;</span><span style="color:#D8DEE9FF;">B2vPD2UsfKc=</span><span style="color:#81A1C1;">&lt;/password&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;multiplier/&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;substitutions/&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;data-injections/&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">&lt;/connection&gt;</span></span>
<span class="line"></span></code></pre></div>`,25),l=[r];function i(s,p,c,u,d,h){return a(),e("div",null,l)}const b=t(o,[["render",i]]);export{g as __pageData,b as default};
