import{_ as s,c as a,o as n,a as t}from"./app.f33a4d5b.js";const g=JSON.parse('{"title":"JMS Connector","description":"","frontmatter":{},"headers":[{"level":2,"title":"Operations","slug":"operations","link":"#operations","children":[{"level":3,"title":"Publish","slug":"publish","link":"#publish","children":[]},{"level":3,"title":"Validate","slug":"validate","link":"#validate","children":[]}]},{"level":2,"title":"Configuration","slug":"configuration","link":"#configuration","children":[]}],"relativePath":"connectors/jms.md"}'),e={name:"connectors/jms.md"},o=t(`<h1 id="jms-connector" tabindex="-1">JMS Connector <a class="header-anchor" href="#jms-connector" aria-hidden="true">#</a></h1><p>The JMS connector provides methods to allow you to publish messages to a JMS message bus and receive and validate messages from a JMS message bus using IdMUnit tests.</p><h2 id="operations" tabindex="-1">Operations <a class="header-anchor" href="#operations" aria-hidden="true">#</a></h2><h3 id="publish" tabindex="-1">Publish <a class="header-anchor" href="#publish" aria-hidden="true">#</a></h3><p>Publishes a message to a queue or topic.</p><h4 id="params" tabindex="-1">Params <a class="header-anchor" href="#params" aria-hidden="true">#</a></h4><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>message</td><td>Message text to publish</td></tr></tbody></table><h3 id="validate" tabindex="-1">Validate <a class="header-anchor" href="#validate" aria-hidden="true">#</a></h3><p>Validates the first message received on the queue or topic.</p><h4 id="params-1" tabindex="-1">Params <a class="header-anchor" href="#params-1" aria-hidden="true">#</a></h4><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>message</td><td>Expected message text to compare with the message text received</td></tr></tbody></table><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-hidden="true">#</a></h2><p>To configure this connector you need to specify the following settings:</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki"><code><span class="line"><span style="color:#81A1C1;">&lt;connection&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;name&gt;</span><span style="color:#D8DEE9FF;">JMS</span><span style="color:#81A1C1;">&lt;/name&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;description&gt;</span><span style="color:#D8DEE9FF;">Connector to a JMS message bus</span><span style="color:#81A1C1;">&lt;/description&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;type&gt;</span><span style="color:#D8DEE9FF;">com.trivir.idmunit.connector.JmsConnector</span><span style="color:#81A1C1;">&lt;/type&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;url&gt;</span><span style="color:#D8DEE9FF;">192.168.1.3</span><span style="color:#81A1C1;">&lt;/url&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;topic&gt;</span><span style="color:#D8DEE9FF;">false</span><span style="color:#81A1C1;">&lt;/topic&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;subject&gt;</span><span style="color:#D8DEE9FF;">TEST.FOO</span><span style="color:#81A1C1;">&lt;/subject&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;connection-factory&gt;</span><span style="color:#D8DEE9FF;">org.apache.activemq.jndi.ActiveMQInitialContextFactory</span><span style="color:#81A1C1;">&lt;/connection-factory&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;connection-factory-jndi-name&gt;</span><span style="color:#D8DEE9FF;">ConnectionFactory</span><span style="color:#81A1C1;">&lt;/connection-factory-jndi-name&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;multiplier/&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;substitutions/&gt;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">    </span><span style="color:#81A1C1;">&lt;data-injections/&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">&lt;/connection&gt;</span></span>
<span class="line"></span></code></pre></div><p>User and password are optional and are used in the JNDI lookup, and connection factory authentication if provided:</p><div class="language-xml"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki"><code><span class="line"><span style="color:#81A1C1;">&lt;user&gt;</span><span style="color:#D8DEE9FF;">jmsuser</span><span style="color:#81A1C1;">&lt;/user&gt;</span></span>
<span class="line"><span style="color:#81A1C1;">&lt;password&gt;</span><span style="color:#D8DEE9FF;">B2vPD2UsfKc=</span><span style="color:#81A1C1;">&lt;/password&gt;</span></span>
<span class="line"></span></code></pre></div>`,16),l=[o];function p(c,r,i,d,h,y){return n(),a("div",null,l)}const m=s(e,[["render",p]]);export{g as __pageData,m as default};
