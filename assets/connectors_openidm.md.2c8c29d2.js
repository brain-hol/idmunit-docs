import{_ as e,c as t,o as a,a as o}from"./app.73871be4.js";const m=JSON.parse('{"title":"OpenIDM Connector","description":"","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[]},{"level":2,"title":"Operations","slug":"operations","link":"#operations","children":[]}],"relativePath":"connectors/openidm.md"}'),n={name:"connectors/openidm.md"},r=o('<h1 id="openidm-connector" tabindex="-1">OpenIDM Connector <a class="header-anchor" href="#openidm-connector" aria-hidden="true">#</a></h1><p>The OpenIDM Connector allows you to manage objects and the sync process for the ForgeRock OpenIDM platform. The connector handles managed users, links to external applications and the recon process.</p><p>Validation of managed users can handle complex and array attributes, as well as customary single and multi-value attributes.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-hidden="true">#</a></h2><p>The OpenIDM connector (openidm.jar) requires gson-2.3.jar as well as ojdbc6.jar to be added to your classpath.</p><h2 id="operations" tabindex="-1">Operations <a class="header-anchor" href="#operations" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">Attribute Postfix Specifiers</p><p>This connector needs to explicitly force attribute types. These postfixes can be added to the end of an attribute in the column header.</p><p>There are currently three supported attribute type specifiers that can be used in the column header:</p><ul><li><code>[]</code> can be used to treat the attribute as an array type.<br> Example: <code>groups[]</code> or <code>description[]</code>.</li><li><code>::bolean</code> can be used to force and attribute to be treated as a boolean.<br> Example: <code>loginDisabled::boolean</code>.</li><li><code>::string</code> can be used to force and attribute to be treated like a string.<br> Example: <code>surname::string</code>.</li></ul></div>',7),s=[r];function i(c,d,l,p,h,u){return a(),t("div",null,s)}const _=e(n,[["render",i]]);export{m as __pageData,_ as default};
